/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBeaconDepositContract,
  IBeaconDepositContractInterface,
} from "../../../contracts/interfaces/IBeaconDepositContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "withdrawal_credentials",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "deposit_data_root",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IBeaconDepositContract__factory {
  static readonly abi = _abi;
  static createInterface(): IBeaconDepositContractInterface {
    return new Interface(_abi) as IBeaconDepositContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBeaconDepositContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBeaconDepositContract;
  }
}
