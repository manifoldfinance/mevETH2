/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "MevEthErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthErrors__factory>;
    getContractFactory(
      name: "IBeaconDepositContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconDepositContract__factory>;
    getContractFactory(
      name: "ICommonOFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICommonOFT__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "ILayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpoint__factory>;
    getContractFactory(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver__factory>;
    getContractFactory(
      name: "ILayerZeroUserApplicationConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroUserApplicationConfig__factory>;
    getContractFactory(
      name: "IMevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEth__factory>;
    getContractFactory(
      name: "IMevEthShareVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEthShareVault__factory>;
    getContractFactory(
      name: "IOFTReceiverV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTReceiverV2__factory>;
    getContractFactory(
      name: "IOFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTV2__factory>;
    getContractFactory(
      name: "IRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider__factory>;
    getContractFactory(
      name: "IStakingModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingModule__factory>;
    getContractFactory(
      name: "ITinyMevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITinyMevEth__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "LzApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LzApp__factory>;
    getContractFactory(
      name: "NonblockingLzApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonblockingLzApp__factory>;
    getContractFactory(
      name: "BaseOFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseOFTV2__factory>;
    getContractFactory(
      name: "OFTCoreV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTCoreV2__factory>;
    getContractFactory(
      name: "OFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTV2__factory>;
    getContractFactory(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth__factory>;
    getContractFactory(
      name: "MevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEth__factory>;
    getContractFactory(
      name: "MevETHRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevETHRateProvider__factory>;
    getContractFactory(
      name: "MevEthShareVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthShareVault__factory>;
    getContractFactory(
      name: "BytesLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BytesLib__factory>;
    getContractFactory(
      name: "WagyuStaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WagyuStaker__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;

    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "MevEthErrors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MevEthErrors>;
    getContractAt(
      name: "IBeaconDepositContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconDepositContract>;
    getContractAt(
      name: "ICommonOFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICommonOFT>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "ILayerZeroEndpoint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroEndpoint>;
    getContractAt(
      name: "ILayerZeroReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroReceiver>;
    getContractAt(
      name: "ILayerZeroUserApplicationConfig",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroUserApplicationConfig>;
    getContractAt(
      name: "IMevEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMevEth>;
    getContractAt(
      name: "IMevEthShareVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMevEthShareVault>;
    getContractAt(
      name: "IOFTReceiverV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOFTReceiverV2>;
    getContractAt(
      name: "IOFTV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOFTV2>;
    getContractAt(
      name: "IRateProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateProvider>;
    getContractAt(
      name: "IStakingModule",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingModule>;
    getContractAt(
      name: "ITinyMevEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITinyMevEth>;
    getContractAt(
      name: "IWETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "LzApp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LzApp>;
    getContractAt(
      name: "NonblockingLzApp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NonblockingLzApp>;
    getContractAt(
      name: "BaseOFTV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseOFTV2>;
    getContractAt(
      name: "OFTCoreV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OFTCoreV2>;
    getContractAt(
      name: "OFTV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OFTV2>;
    getContractAt(
      name: "Auth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Auth>;
    getContractAt(
      name: "MevEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MevEth>;
    getContractAt(
      name: "MevETHRateProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MevETHRateProvider>;
    getContractAt(
      name: "MevEthShareVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MevEthShareVault>;
    getContractAt(
      name: "BytesLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BytesLib>;
    getContractAt(
      name: "WagyuStaker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WagyuStaker>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;

    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "MevEthErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthErrors>;
    deployContract(
      name: "IBeaconDepositContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconDepositContract>;
    deployContract(
      name: "ICommonOFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICommonOFT>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "ILayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpoint>;
    deployContract(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "ILayerZeroUserApplicationConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroUserApplicationConfig>;
    deployContract(
      name: "IMevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEth>;
    deployContract(
      name: "IMevEthShareVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEthShareVault>;
    deployContract(
      name: "IOFTReceiverV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTReceiverV2>;
    deployContract(
      name: "IOFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTV2>;
    deployContract(
      name: "IRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider>;
    deployContract(
      name: "IStakingModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingModule>;
    deployContract(
      name: "ITinyMevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITinyMevEth>;
    deployContract(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "LzApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LzApp>;
    deployContract(
      name: "NonblockingLzApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonblockingLzApp>;
    deployContract(
      name: "BaseOFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseOFTV2>;
    deployContract(
      name: "OFTCoreV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTCoreV2>;
    deployContract(
      name: "OFTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTV2>;
    deployContract(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth>;
    deployContract(
      name: "MevEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEth>;
    deployContract(
      name: "MevETHRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevETHRateProvider>;
    deployContract(
      name: "MevEthShareVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthShareVault>;
    deployContract(
      name: "BytesLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BytesLib>;
    deployContract(
      name: "WagyuStaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WagyuStaker>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20>;

    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "MevEthErrors",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthErrors>;
    deployContract(
      name: "IBeaconDepositContract",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconDepositContract>;
    deployContract(
      name: "ICommonOFT",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICommonOFT>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "ILayerZeroEndpoint",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpoint>;
    deployContract(
      name: "ILayerZeroReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "ILayerZeroUserApplicationConfig",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroUserApplicationConfig>;
    deployContract(
      name: "IMevEth",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEth>;
    deployContract(
      name: "IMevEthShareVault",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMevEthShareVault>;
    deployContract(
      name: "IOFTReceiverV2",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTReceiverV2>;
    deployContract(
      name: "IOFTV2",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFTV2>;
    deployContract(
      name: "IRateProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider>;
    deployContract(
      name: "IStakingModule",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingModule>;
    deployContract(
      name: "ITinyMevEth",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITinyMevEth>;
    deployContract(
      name: "IWETH",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "LzApp",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LzApp>;
    deployContract(
      name: "NonblockingLzApp",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonblockingLzApp>;
    deployContract(
      name: "BaseOFTV2",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseOFTV2>;
    deployContract(
      name: "OFTCoreV2",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTCoreV2>;
    deployContract(
      name: "OFTV2",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTV2>;
    deployContract(
      name: "Auth",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth>;
    deployContract(
      name: "MevEth",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEth>;
    deployContract(
      name: "MevETHRateProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevETHRateProvider>;
    deployContract(
      name: "MevEthShareVault",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MevEthShareVault>;
    deployContract(
      name: "BytesLib",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BytesLib>;
    deployContract(
      name: "WagyuStaker",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WagyuStaker>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.Contract>;
  }
}
